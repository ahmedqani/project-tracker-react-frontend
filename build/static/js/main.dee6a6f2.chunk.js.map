{"version":3,"sources":["redux/actions/types.ts","redux/actions/users.ts","redux/actions/login.ts","redux/reducers/login.ts","redux/reducers/index.ts","redux/reducers/users.ts","component/layout/MainHeader.tsx","component/layout/Layout.tsx","component/Login.tsx","component/UserHomeComponent.tsx","component/layout/SideBar.tsx","pages/Home.tsx","pages/AdminAllUsers.tsx","component/Signup.tsx","pages/AllProjects.tsx","pages/UserTasks.tsx","pages/NewProject.tsx","pages/NewTask.tsx","pages/EditProject.tsx","pages/EditTask.tsx","pages/AdminAllProjects.tsx","application.tsx","index.tsx","component/layout/MainHeader.module.css","component/layout/Layout.module.css"],"names":["ActionTypes","fetchAllUsers","dispatch","a","axios","get","resp","type","fetchaAllUsers","payload","data","loginUser","user","console","log","post","localDBUrl","sessionStorage","setItem","JSON","stringify","getItem","login","logoutUser","clear","user_id","email","firstname","lastname","password","profpic","userRole","username","logout","reducers","combineReducers","users","state","action","userLogin","toString","MainHeader","connect","props","navigate","useNavigate","useEffect","setLogged","className","classes","header","logged","navData","isActive","active","to","onClick","Layout","useState","main","children","Login","setUsername","setPassword","warning","setWarning","onSubmit","e","preventDefault","value","onChange","target","required","UserHomeComponent","setEmail","setFirstname","setLastname","setUserRole","updateUser","put","src","alt","name","disabled","placeholder","event","defaultValue","SideBar","updateClickedPage","sidebar","setSidebar","showSidebar","Provider","color","Home","AdminAllUsers","renderPic","map","Signup","signUpUser","AllProjects","sideBarContent","UserTasks","NewProject","NewTask","EditProject","EditTask","AdminAllProjects","Application","path","element","replace","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.dee6a6f2.chunk.js","sourcesContent":["import {FetchAllUsersAction} from \"./users\";\r\nimport {LoginUserAction, LogoutUserAction} from \"./login\";\r\n\r\nexport enum ActionTypes{\r\n    fetchaAllUsers,\r\n    login,\r\n    logout,\r\n\r\n}\r\n\r\nexport type Action = FetchAllUsersAction | LoginUserAction | LogoutUserAction ;\r\n","import axios from \"axios\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionTypes} from \"./types\";\r\n\r\nconst urlApi = `http://52.14.40.145:8080/api/users/all` ;\r\nconst localDBUrl = `http://localhost:8090/api/users/all`;\r\n\r\nexport interface User{\r\n    user_id: number;\r\n    email: string;\r\n    firstname: string;\r\n    lastname : string;\r\n    password : string;\r\n    profpic  : string;\r\n    userRole: string;\r\n    username : string;\r\n}\r\nexport interface FetchAllUsersAction{\r\n    type: ActionTypes.fetchaAllUsers;\r\n    payload: User[];\r\n}\r\n\r\nexport const fetchAllUsers = () => {\r\n    return async (dispatch: Dispatch) => {\r\n        const resp = await axios.get<User[]>(localDBUrl)\r\n        dispatch<FetchAllUsersAction>({\r\n            type: ActionTypes.fetchaAllUsers,\r\n            payload: resp.data\r\n        })\r\n    }\r\n}","import axios from \"axios\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionTypes} from \"./types\";\r\nimport {User} from \"./users\";\r\n\r\nconst urlApi = `http://52.14.40.145:8080/api/users/all` ;\r\nconst localDBUrl = `http://localhost:8090/api/users/`;\r\n\r\nexport interface LoginUserAction{\r\n    type: ActionTypes.login;\r\n    payload: User;\r\n}\r\nexport interface LogoutUserAction{\r\n    type: ActionTypes.logout;\r\n    payload: User;\r\n\r\n}\r\nexport interface LoginType{\r\n    username:string;\r\n    password:string;\r\n}\r\n\r\nexport const loginUser = (user:LoginType) => {\r\n    return async (dispatch: Dispatch) => {\r\n        console.log(\"In the Action Login !!!\"+user)\r\n        const resp = await axios.post<User>(localDBUrl+\"login\",user)\r\n        sessionStorage.setItem(\"currentUser\", JSON.stringify(resp.data))\r\n        sessionStorage.setItem(\"logged\", \"true\")\r\n        console.log(sessionStorage.getItem(\"currentUser\"))\r\n        dispatch<LoginUserAction>({\r\n            type: ActionTypes.login,\r\n            payload: resp.data\r\n        })\r\n    }\r\n}\r\nexport const logoutUser = () => {\r\n    sessionStorage.clear()\r\n    let user :User = {\r\n        user_id: 0,\r\n        email: \"\",\r\n        firstname: \"\",\r\n        lastname : \"\",\r\n        password : \"\",\r\n        profpic  : \"\",\r\n        userRole: \"\",\r\n        username : \"\"\r\n    }\r\n    return (dispatch: Dispatch) => dispatch<LogoutUserAction>({\r\n        type: ActionTypes.logout,\r\n        payload: user\r\n\r\n    })\r\n}","import {User, ActionTypes, Action} from \"../actions\";\r\n\r\nlet user :User = {\r\n    user_id: 0,\r\n    email: \"\",\r\n    firstname: \"\",\r\n    lastname : \"\",\r\n    password : \"\",\r\n    profpic  : \"\",\r\n    userRole: \"\",\r\n    username : \"\"\r\n}\r\n\r\n\r\nexport const loginReducer = (state:User = user, action: Action) => {\r\n    console.log(\"In the LoginReduce With action \"+ user + action.type.toString)\r\n    switch (action.type) {\r\n        case ActionTypes.login:\r\n            return action.payload;\r\n        case ActionTypes.logout:\r\n            console.log(\"IN the Logout Reduces before changing the state!!\")\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport {usersReducer} from \"./users\";\r\nimport {User} from \"../actions\";\r\nimport {loginReducer} from \"./login\";\r\n\r\nexport interface StoreState{\r\n    users: User[];\r\n    userLogin: User;\r\n\r\n}\r\n\r\nexport const reducers = combineReducers<StoreState>({\r\n    users: usersReducer,\r\n    userLogin: loginReducer,\r\n});","import {User, ActionTypes, Action} from \"../actions\";\r\n\r\nexport const usersReducer = (state: User[] = [], action: Action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.fetchaAllUsers:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {NavLink, useNavigate} from \"react-router-dom\";\r\nimport classes from './MainHeader.module.css';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {loginUser, logoutUser, User} from \"../../redux/actions\";\r\nimport {StoreState} from \"../../redux/reducers\";\r\nimport {connect} from \"react-redux\";\r\n\r\ninterface MainHeaderProps {\r\n    userLogin: User;\r\n    logged: boolean;\r\n    setLogged: any;\r\n    logoutUser: Function;\r\n}\r\n\r\nconst _MainHeader: React.FunctionComponent<MainHeaderProps> = props => {\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (props.userLogin.user_id === 0) {\r\n            navigate(\"/login\");\r\n        }\r\n        if (props.userLogin.user_id !== 0) {\r\n            props.setLogged(true);\r\n        }\r\n    }, [props.userLogin])\r\n\r\n    const onClickLogoutUser = () => {\r\n        logoutUser();\r\n        props.setLogged(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <header className={classes.header}>\r\n            <nav> {console.log(props.logged)}\r\n                <ul>\r\n                    <li>{props.logged ?\r\n                        <NavLink className={(navData) => (navData.isActive ? classes.active : '')} to='/home'>\r\n                            Home\r\n                        </NavLink> :\r\n                        <NavLink className={(navData) => (navData.isActive ? classes.active : '')} to='/login'>\r\n                            Login\r\n                        </NavLink>}\r\n                    </li>\r\n                    {!props.logged ?\r\n                        <li><NavLink className={(navData) => (navData.isActive ? classes.active : '')} to='/signup'>\r\n                            SignUp\r\n                        </NavLink>\r\n                        </li>: \"\"}\r\n                    {props.userLogin.userRole ===\"ADMIN\" ?<li><NavLink className={(navData) => (navData.isActive ? classes.active : '')} to='/admin_all_users'>\r\n                        All Users\r\n                    </NavLink>\r\n                    </li>: \"\"}\r\n                    {props.userLogin.userRole ===\"ADMIN\" ?<li><NavLink className={(navData) => (navData.isActive ? classes.active : '')} to='admin_all_projects'>\r\n                        All Projects\r\n                    </NavLink>\r\n                    </li>: \"\"}\r\n                    <li>{props.logged ? <NavLink className={(navData) => (navData.isActive ? classes.active : \"\")}\r\n                                                 onClick={onClickLogoutUser} to={`/login`}>\r\n                        Logout\r\n                    </NavLink> : \"\"}\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({userLogin}: StoreState): { userLogin: User; } => {\r\n    return {userLogin}\r\n}\r\n\r\nexport const MainHeader = connect(\r\n    mapStateToProps,\r\n    {logoutUser}\r\n)(_MainHeader)\r\n","import React, {Fragment, useEffect, useState} from 'react';\r\n\r\nimport classes from './Layout.module.css';\r\nimport {MainHeader} from './MainHeader';\r\n\r\nconst Layout: React.FunctionComponent<{}> = (props) => {\r\n    const [logged , setLogged] = useState<boolean>(false)\r\n    useEffect(() => {\r\n        console.log(logged)\r\n    },[logged])\r\n\r\n    const changeLogged = (e: any) => {\r\n        setLogged(true);\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MainHeader logged = {logged} setLogged ={setLogged}/>\r\n            <main className={classes.main}>{props.children}</main>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React, {useState} from 'react';\r\nimport {loginUser, logoutUser, User} from \"../redux/actions\";\r\nimport {LoginType} from \"../redux/actions\";\r\nimport {StoreState} from \"../redux/reducers\";\r\nimport {connect} from \"react-redux\";\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n\r\ninterface LoginProps {\r\n    userLogin: User;\r\n    loginUser: Function;\r\n    logoutUser: Function\r\n}\r\n\r\nconst _Login: React.FunctionComponent<LoginProps> = (props) => {\r\n    const [username, setUsername] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [warning,setWarning] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const handleChangeUserName = (e: any): void => {\r\n        setUsername(e.target.value)\r\n    }\r\n    const handleChangePassword = (e: any): void => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const handleSubmitLogin = (e: any): void => {\r\n        e.preventDefault()\r\n        let user: LoginType = {\r\n            username,\r\n            password\r\n        }\r\n        props.loginUser(user)\r\n        if (props.userLogin.user_id !== 0){\r\n            navigate(`/login`)\r\n        }\r\n        if(props.userLogin.user_id === 0) {\r\n            setWarning(\"Please make sure the username and password correct\")\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmitLogin}>\r\n                <div className={\"text-danger\"}>{warning}</div>\r\n                <div className=\"form-group\">\r\n                    <label>Username:</label>\r\n                    <input type=\"text\" className=\"form-control\" value={username} onChange={handleChangeUserName} required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Password:</label>\r\n                    <input type=\"text\" className=\"form-control\" value={password} onChange={handleChangePassword} required/>\r\n                </div>\r\n                <br/>\r\n                <input className=\"form-control btn btn-primary btn-block\" type=\"submit\" value=\"Submit\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({userLogin}: StoreState): { userLogin: User } => {\r\n    return {userLogin}\r\n}\r\n\r\nexport const Login = connect(\r\n    mapStateToProps,\r\n    {logoutUser, loginUser}\r\n)(_Login)\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {LoginType, loginUser, User} from \"../redux/actions\";\r\nimport {StoreState} from \"../redux/reducers\";\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\ninterface UserHomeComponentProps {\r\n    userLogin: User;\r\n}\r\n\r\nconst _UserHomeComponent: React.FunctionComponent<UserHomeComponentProps> = props => {\r\n    const [user_id, setUser_id] = useState(props.userLogin.user_id);\r\n    const [username, setUsername] = useState(props.userLogin.username);\r\n    const [password, setPassword] = useState(props.userLogin.password);\r\n    const [email, setEmail] = useState(props.userLogin.email);\r\n    const [firstname, setFirstname] = useState(props.userLogin.firstname);\r\n    const [lastname, setLastname] = useState(props.userLogin.lastname);\r\n    const [profpic, setProfpic] = useState(props.userLogin.profpic);\r\n    const [userRole, setUserRole] = useState(props.userLogin.userRole);\r\n    const [warning, setWarning] = useState(\"\");\r\n\r\n    const localDBUrl = `http://localhost:8090/api/users/update/`;\r\n\r\n    const renderPic = (): string => {\r\n        if (profpic == null || profpic === \"\") {\r\n            return \"https://ptracker-java-react.s3.us-east-2.amazonaws.com/images/profile.png\";\r\n        } else {\r\n            return \"https://ptracker-java-react.s3.us-east-2.amazonaws.com/images/\" + profpic;\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n\r\n    },[props.userLogin])\r\n\r\n    const updateUser = async (e: any) => {\r\n        e.preventDefault()\r\n        let user: User = {\r\n            user_id,\r\n            email,\r\n            firstname,\r\n            lastname,\r\n            password,\r\n            profpic,\r\n            userRole,\r\n            username\r\n        }\r\n        let login :LoginType ={\r\n            username,\r\n            password\r\n        }\r\n        const resp = await axios.put<User>(localDBUrl+user_id, user);\r\n        console.log(resp.data)\r\n        if (resp.data.user_id !== 0) {\r\n            loginUser(login);\r\n            setWarning(resp.data.username + \" Was Updated!! \")\r\n        } else {\r\n            setWarning(\"User Coulndt be Updated!! something went wrong!!!\")\r\n        }\r\n    }\r\n\r\n    // @ts-ignore\r\n    return (\r\n\r\n        <div  key={props.userLogin.user_id}>\r\n            <div>\r\n                <form onSubmit={updateUser}>\r\n                    <h3>Update your information</h3>\r\n                    <h2>{warning}</h2>\r\n                    <div>\r\n                        <img src={renderPic()} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>User ID</label>\r\n                        <input type=\"text\" className=\"form-control\"\r\n                               value={user_id} name=\"user_id\" disabled/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>First name</label>\r\n                        <input type=\"text\" className=\"form-control\" onChange={(e) => setFirstname(e.target.value)}\r\n                               value={firstname} name=\"firstname\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Last name</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" value={lastname}\r\n                               onChange={(e) => setLastname(e.target.value)} name=\"lastname\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Username</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Username\" value={username}\r\n                               onChange={(e) => setUsername(e.target.value)} name=\"username\" required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" value={email}\r\n                               onChange={(e) => setEmail(e.target.value)} name=\"email\" required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" value={password}\r\n                               onChange={(e) => setPassword(e.target.value)} name=\"password\" required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>User Role</label>\r\n                        <select className={\"form-control\"} name=\"userRole\"\r\n                                onChange={event =>{\r\n                                    if (event.target.value === \"ADMIN\"){\r\n                                        setUserRole(\"ADMIN\");\r\n                                    }\r\n                                    if (event.target.value === \"ADMIN\"){\r\n                                        setUserRole(\"USER\")\r\n                                    }\r\n                                } } defaultValue={userRole}>\r\n                            <option value=\"ADMIN\">ADMIN</option>\r\n                            <option value=\"USER\">USER</option>\r\n                        </select>\r\n                    </div>\r\n                    <br/>\r\n                    <input type=\"submit\" className=\"form-control btn btn-primary btn-block\" value={\"Update User\"}/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = ({userLogin}: StoreState): { userLogin: User } => {\r\n    return {userLogin}\r\n}\r\n\r\nexport const UserHomeComponent = connect(\r\n    mapStateToProps,\r\n    {}\r\n)(_UserHomeComponent)","import React, {useState} from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport {Link, NavLink} from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport {IconContext} from 'react-icons';\r\n\r\nimport * as IoIcons from 'react-icons/io';\r\nimport {UserHomeComponent} from \"../UserHomeComponent\";\r\nimport classes from \"./MainHeader.module.css\";\r\n\r\n\r\nconst SideBar: React.FC<any> = ({updateClickedPage}: any) => {\r\n    const [sidebar, setSidebar] = useState(false);\r\n\r\n    const showSidebar = () => setSidebar(!sidebar);\r\n    // const onClickPageProfile = () => {\r\n    //     updateClickedPage(1)\r\n    // }\r\n\r\n    return (\r\n\r\n        <IconContext.Provider value={{color: '#b78d8d'}}>\r\n            <div className='navbar'>\r\n                <Link to='#' className='menu-bars'>\r\n                    <FaIcons.FaBars onClick={showSidebar}/>\r\n\r\n                </Link>\r\n            </div>\r\n            <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n                <ul className='nav-menu-items' onClick={showSidebar}>\r\n                    <li className='navbar-toggle'>\r\n                        <Link to='#' className='menu-bars'>\r\n                            <AiIcons.AiOutlineClose/>\r\n                        </Link>\r\n                    </li>\r\n                    {/*Mini Nav Options Start Here*/}\r\n                    <li className={\"nav-text\"}>\r\n                        <NavLink className={(navData) => (navData.isActive ? classes.active : '')} to={\"/home\"}>\r\n                            <AiIcons.AiFillProfile/>Profile\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className={\"nav-text\"}>\r\n                        <NavLink className={(navData) => (navData.isActive ? classes.active : '')} to={\"/user_projects\"}>\r\n                            <IoIcons.IoIosPaper/>All Projects\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className={\"nav-text\"}>\r\n                        <NavLink className={(navData) => (navData.isActive ? classes.active : '')} to={\"/user_tasks\"}>\r\n                            <FaIcons.FaCartPlus/>Your Tasks\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className={\"nav-text\"}>\r\n                        <NavLink className={(navData) => (navData.isActive ? classes.active : '')} to={\"/new_project\"}>\r\n                            <IoIcons.IoMdPeople/>New Project\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className={\"nav-text\"}>\r\n                        <NavLink className={(navData) => (navData.isActive ? classes.active : '')} to={\"/new_task\"}>\r\n                            <FaIcons.FaEnvelopeOpenText/>New Task\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className={\"nav-text\"}>\r\n                        <NavLink className={(navData) => (navData.isActive ? classes.active : '')} to={\"/edit_project\"}>\r\n                            <IoIcons.IoMdHelpCircle/>Edit Project\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className={\"nav-text\"}>\r\n                        <NavLink className={(navData) => (navData.isActive ? classes.active : '')} to={\"/edit_task\"}>\r\n                            <IoIcons.IoMdHelpCircle/>Edit Task\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </IconContext.Provider>\r\n\r\n    );\r\n}\r\n\r\nexport default SideBar;","import React, {Fragment, useEffect, useRef, useState} from 'react';\r\nimport {StoreState} from \"../redux/reducers\";\r\nimport {connect} from \"react-redux\";\r\nimport {UserHomeComponent} from \"../component/UserHomeComponent\";\r\nimport {loginUser, logoutUser,User} from \"../redux/actions\";\r\nimport {Route, Routes} from 'react-router-dom';\r\nimport SideBar from \"../component/layout/SideBar\";\r\nimport \"../component/layout/Layout.module.css\"\r\nimport classes from \"../component/layout/Layout.module.css\";\r\n\r\n\r\n\r\ninterface HomeProps{\r\n    userLogin: User;\r\n}\r\n\r\nconst _Home: React.FunctionComponent<HomeProps> = props => {\r\n    useEffect(() => {\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <SideBar/>\r\n            <section className={\"sideBarContent\"}>\r\n                <UserHomeComponent/>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\nconst  mapStateToProps = ({userLogin}: StoreState):{userLogin : User;} => {\r\n    return {userLogin}\r\n}\r\n\r\nexport const Home = connect(\r\n    mapStateToProps,\r\n    {logoutUser,loginUser}\r\n)(_Home)","import React, {useState} from 'react';\r\nimport {fetchAllUsers, loginUser, logoutUser, User} from \"../redux/actions\";\r\nimport {LoginType} from \"../redux/actions\";\r\nimport {StoreState} from \"../redux/reducers\";\r\nimport {connect} from \"react-redux\";\r\n\r\ninterface AllUsersProps{\r\n    users: User[];\r\n    fetchAllUsers: Function;\r\n}\r\n\r\nconst _AdminAllUsers: React.FunctionComponent<AllUsersProps> = (props)=> {\r\n\r\n    const renderPic = (user:User)  => {\r\n        if (user.profpic == null){\r\n            return \"https://ptracker-java-react.s3.us-east-2.amazonaws.com/images/profile.png\";\r\n        }else {\r\n            return \"https://ptracker-java-react.s3.us-east-2.amazonaws.com/images/\" + user.profpic;\r\n        }\r\n    }\r\n\r\n    const renderUsers = () : JSX.Element[]=> {\r\n        return props.users.map((user: User) => {\r\n            return (\r\n                <div key={user.user_id}>\r\n                    <div><img src={renderPic(user)} alt=\"\"/></div>\r\n                    {user.username}<br/>\r\n                    {user.firstname}<br/>\r\n                    {user.lastname}<br/>\r\n                    {user.email}<br/>\r\n                    {user.userRole}<br/>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n    const  onClickFetchUsers = ():void => {\r\n        props.fetchAllUsers();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={onClickFetchUsers}>FETCH USERS</button>\r\n            {renderUsers()}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst  mapStateToProps = ({users}: StoreState):{users : User[]} => {\r\n    return {users}\r\n}\r\n\r\nexport const AdminAllUsers = connect(\r\n    mapStateToProps,\r\n    {fetchAllUsers}\r\n)(_AdminAllUsers)\r\n","import React, {Component, useState} from \"react\";\r\nimport {loginUser, logoutUser, User} from \"../redux/actions\";\r\nimport {StoreState} from \"../redux/reducers\";\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\ninterface SignupProps {\r\n    userLogin: User;\r\n}\r\n\r\nconst _Signup: React.FunctionComponent<SignupProps> = (props) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [firstname, setFirstname] = useState(\"\");\r\n    const [lastname, setLastname] = useState(\"\");\r\n    const [warning, setWarning] = useState(\"\");\r\n\r\n    const localDBUrl = `http://localhost:8090/api/users/save`;\r\n    const signUpUser = async (e: any) => {\r\n        e.preventDefault()\r\n        let user: User = {\r\n            user_id: 0,\r\n            email,\r\n            firstname,\r\n            lastname,\r\n            password,\r\n            profpic: \"\",\r\n            userRole: \"USER\",\r\n            username\r\n        }\r\n        const resp = await axios.post<User>(localDBUrl, user);\r\n        if (resp.data.user_id !== 0) {\r\n            setWarning(resp.data.username + \" Was Created You May Login Now\")\r\n        } else {\r\n            setWarning(\"User Coulndt be Created something went wrong!!!\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={signUpUser}>\r\n                <h3>Sign Up</h3>\r\n                <h2>{warning}</h2>\r\n                <div className=\"form-group\">\r\n                    <label>First name</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={(e) => setFirstname(e.target.value)}\r\n                           placeholder=\"First name\" name=\"firstname\" required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Last name</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Last name\"\r\n                           onChange={(e) => setLastname(e.target.value)} name=\"lastname\" required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Username</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Username\"\r\n                           onChange={(e) => setUsername(e.target.value)} name=\"username\" required/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\"\r\n                           onChange={(e) => setEmail(e.target.value)} name=\"email\" required/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\"\r\n                           onChange={(e) => setPassword(e.target.value)} name=\"password\" required/>\r\n                </div>\r\n                <br/>\r\n                <input type=\"submit\" className=\"form-control btn btn-primary btn-block\" value={\"Sign up\"}/>\r\n                <p className=\"forgot-password text-right\">\r\n                    Already registered <NavLink to={\"/login\"}>sign in?</NavLink>\r\n                </p>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({userLogin}: StoreState): { userLogin: User } => {\r\n    return {userLogin}\r\n}\r\n\r\nexport const Signup = connect(\r\n    mapStateToProps,\r\n    {}\r\n)(_Signup)","import React, {Fragment, useEffect, useRef, useState} from 'react';\r\nimport {StoreState} from \"../redux/reducers\";\r\nimport {connect} from \"react-redux\";\r\nimport {UserHomeComponent} from \"../component/UserHomeComponent\";\r\nimport {loginUser, logoutUser,User} from \"../redux/actions\";\r\nimport SideBar from \"../component/layout/SideBar\";\r\nimport classes from \"../component/layout/Layout.module.css\";\r\n\r\n\r\n\r\ninterface AllProjectsProps{\r\n    userLogin: User;\r\n}\r\n\r\nconst _AllProjects: React.FunctionComponent<AllProjectsProps> = props => {\r\n    useEffect(() => {\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <SideBar/>\r\n            <section className={classes.sideBarContent}>\r\n                <p>ALL PROJECTS GO HERE!!!</p>\r\n            </section>\r\n\r\n        </div>\r\n    );\r\n}\r\nconst  mapStateToProps = ({userLogin}: StoreState):{userLogin : User;} => {\r\n    return {userLogin}\r\n}\r\n\r\nexport const AllProjects = connect(\r\n    mapStateToProps,\r\n    {logoutUser,loginUser}\r\n)(_AllProjects)","import React, {Fragment, useEffect, useRef, useState} from 'react';\r\nimport {StoreState} from \"../redux/reducers\";\r\nimport {connect} from \"react-redux\";\r\nimport {UserHomeComponent} from \"../component/UserHomeComponent\";\r\nimport {loginUser, logoutUser,User} from \"../redux/actions\";\r\nimport SideBar from \"../component/layout/SideBar\";\r\nimport classes from \"../component/layout/Layout.module.css\";\r\n\r\n\r\n\r\ninterface UserTasksProps{\r\n    userLogin: User;\r\n}\r\n\r\nconst _UserTasks: React.FunctionComponent<UserTasksProps> = props => {\r\n    useEffect(() => {\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <SideBar/>\r\n            <section className={classes.sideBarContent}>\r\n                <p>USER TASKS GOES HERE!!!</p>\r\n            </section>\r\n\r\n        </div>\r\n    );\r\n}\r\nconst  mapStateToProps = ({userLogin}: StoreState):{userLogin : User;} => {\r\n    return {userLogin}\r\n}\r\n\r\nexport const UserTasks = connect(\r\n    mapStateToProps,\r\n    {logoutUser,loginUser}\r\n)(_UserTasks)","import React, {Fragment, useEffect, useRef, useState} from 'react';\r\nimport {StoreState} from \"../redux/reducers\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginUser, logoutUser,User} from \"../redux/actions\";\r\nimport SideBar from \"../component/layout/SideBar\";\r\nimport classes from \"../component/layout/Layout.module.css\";\r\n\r\n\r\n\r\ninterface NewProjectProps{\r\n    userLogin: User;\r\n}\r\n\r\nconst _NewProject: React.FunctionComponent<NewProjectProps> = props => {\r\n    useEffect(() => {\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <SideBar/>\r\n            <section className={classes.sideBarContent}>\r\n                <p>NEW PROJECT FORM GOES HERE!!!</p>\r\n            </section>\r\n\r\n        </div>\r\n    );\r\n}\r\nconst  mapStateToProps = ({userLogin}: StoreState):{userLogin : User;} => {\r\n    return {userLogin}\r\n}\r\n\r\nexport const NewProject = connect(\r\n    mapStateToProps,\r\n    {logoutUser,loginUser}\r\n)(_NewProject)","import React, {Fragment, useEffect, useRef, useState} from 'react';\r\nimport {StoreState} from \"../redux/reducers\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginUser, logoutUser,User} from \"../redux/actions\";\r\nimport SideBar from \"../component/layout/SideBar\";\r\nimport classes from \"../component/layout/Layout.module.css\";\r\n\r\n\r\n\r\ninterface NewTaskProps{\r\n    userLogin: User;\r\n}\r\n\r\nconst _NewTask: React.FunctionComponent<NewTaskProps> = props => {\r\n    useEffect(() => {\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <SideBar/>\r\n            <section className={classes.sideBarContent}>\r\n                <p>NEW TASK FORM GOES HERE!!!</p>\r\n            </section>\r\n\r\n        </div>\r\n    );\r\n}\r\nconst  mapStateToProps = ({userLogin}: StoreState):{userLogin : User;} => {\r\n    return {userLogin}\r\n}\r\n\r\nexport const NewTask = connect(\r\n    mapStateToProps,\r\n    {logoutUser,loginUser}\r\n)(_NewTask)","import React, {Fragment, useEffect, useRef, useState} from 'react';\r\nimport {StoreState} from \"../redux/reducers\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginUser, logoutUser,User} from \"../redux/actions\";\r\nimport SideBar from \"../component/layout/SideBar\";\r\nimport classes from \"../component/layout/Layout.module.css\";\r\n\r\n\r\n\r\ninterface EditProjectProps{\r\n    userLogin: User;\r\n}\r\n\r\nconst _EditProject: React.FunctionComponent<EditProjectProps> = props => {\r\n    useEffect(() => {\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <SideBar/>\r\n            <section className={classes.sideBarContent}>\r\n                <p>Edit Project FORM GOES HERE!!!</p>\r\n            </section>\r\n\r\n        </div>\r\n    );\r\n}\r\nconst  mapStateToProps = ({userLogin}: StoreState):{userLogin : User;} => {\r\n    return {userLogin}\r\n}\r\n\r\nexport const EditProject = connect(\r\n    mapStateToProps,\r\n    {logoutUser,loginUser}\r\n)(_EditProject)","import React, {Fragment, useEffect, useRef, useState} from 'react';\r\nimport {StoreState} from \"../redux/reducers\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginUser, logoutUser,User} from \"../redux/actions\";\r\nimport SideBar from \"../component/layout/SideBar\";\r\nimport classes from \"../component/layout/Layout.module.css\";\r\n\r\n\r\n\r\ninterface EditTaskProps{\r\n    userLogin: User;\r\n}\r\n\r\nconst _EditTask: React.FunctionComponent<EditTaskProps> = props => {\r\n    useEffect(() => {\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <SideBar/>\r\n            <section className={classes.sideBarContent}>\r\n                <p>Edit TASK FORM GOES HERE!!!</p>\r\n            </section>\r\n\r\n        </div>\r\n    );\r\n}\r\nconst  mapStateToProps = ({userLogin}: StoreState):{userLogin : User;} => {\r\n    return {userLogin}\r\n}\r\n\r\nexport const EditTask = connect(\r\n    mapStateToProps,\r\n    {logoutUser,loginUser}\r\n)(_EditTask)","import React, {useState} from 'react';\r\nimport {fetchAllUsers, loginUser, logoutUser, User} from \"../redux/actions\";\r\nimport {LoginType} from \"../redux/actions\";\r\nimport {StoreState} from \"../redux/reducers\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\ninterface AdminAllProjectsProps{\r\n    users: User[];\r\n    fetchAllUsers: Function;\r\n}\r\n\r\nconst _AdminAllProject: React.FunctionComponent<AdminAllProjectsProps> = (props)=> {\r\n\r\n    const localDBUrl = `http://localhost:8090/api/project/all/`;\r\n\r\n    const renderPic = (user:User)  => {\r\n        if (user.profpic == null){\r\n            return \"https://ptracker-java-react.s3.us-east-2.amazonaws.com/images/profile.png\";\r\n        }else {\r\n            return \"https://ptracker-java-react.s3.us-east-2.amazonaws.com/images/\" + user.profpic;\r\n        }\r\n    }\r\n\r\n    const renderAllProjects = () : JSX.Element[]=> {\r\n        return props.users.map((user: User) => {\r\n            return (\r\n                <div key={user.user_id}>\r\n                <div><img src={renderPic(user)} alt=\"\"/></div>\r\n            {user.username}<br/>\r\n            {user.firstname}<br/>\r\n            {user.lastname}<br/>\r\n            {user.email}<br/>\r\n            {user.userRole}<br/>\r\n            </div>\r\n        );\r\n        });\r\n    }\r\n    const fetchAllProjects = async () => {\r\n        const allProjects = await axios.get<User>(localDBUrl);\r\n\r\n    }\r\n    const  onClickFetchUsers = ():void => {\r\n        props.fetchAllUsers();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={onClickFetchUsers}>FETCH USERS</button>\r\n    {renderAllProjects()}\r\n    </div>\r\n);\r\n}\r\n\r\n\r\nconst  mapStateToProps = ({users}: StoreState):{users : User[]} => {\r\n    return {users}\r\n}\r\n\r\nexport const AdminAllProjects = connect(\r\n    mapStateToProps,\r\n    {fetchAllUsers}\r\n)(_AdminAllProject)\r\n","import React from \"react\";\r\nimport {Route, Routes, Navigate} from 'react-router-dom';\r\nimport Layout from \"./component/layout/Layout\";\r\nimport {Login} from \"./component/Login\";\r\nimport {Home} from \"./pages/Home\";\r\nimport {AdminAllUsers} from \"./pages/AdminAllUsers\";\r\nimport {Signup} from \"./component/Signup\";\r\nimport \"./application.css\"\r\nimport {AllProjects} from \"./pages/AllProjects\";\r\nimport {UserTasks} from \"./pages/UserTasks\";\r\nimport {NewProject} from \"./pages/NewProject\";\r\nimport {NewTask} from \"./pages/NewTask\";\r\nimport {EditProject} from \"./pages/EditProject\";\r\nimport {EditTask} from \"./pages/EditTask\";\r\nimport {AdminAllProjects} from \"./pages/AdminAllProjects\";\r\n\r\nconst Application: React.FunctionComponent<{}> = props => {\r\n\r\n    return (\r\n        <Layout>\r\n            <Routes>\r\n                <Route path='/' element={<Navigate replace to='/login'/>}/>\r\n                <Route path='/login' element={<Login/>}/>\r\n                <Route path='/signup' element={<Signup/>}/>\r\n                <Route path='/home' element={<Home/>}/>\r\n                <Route path='/admin_all_users' element={<AdminAllUsers/>}/>\r\n                <Route path='/admin_all_projects' element={<AdminAllProjects/>}/>\r\n                <Route path={\"/user_projects\"} element={<AllProjects/>}/>\r\n                <Route path={\"/user_tasks\"} element={<UserTasks/>}/>\r\n                <Route path={\"/new_project\"} element={<NewProject/>}/>\r\n                <Route path={\"/new_task\"} element={<NewTask/>}/>\r\n                <Route path={\"/edit_project\"} element={<EditProject/>}/>\r\n                <Route path={\"/edit_task\"} element={<EditTask/>}/>\r\n                {/*<Route path='*' element={<NotFound />} />*/}\r\n            </Routes>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Application;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, Link, BrowserRouter} from 'react-router-dom';\nimport {Provider} from \"react-redux\"\nimport './index.css';\nimport {App} from './App';\nimport {createStore , applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {reducers} from \"./redux/reducers\";\nimport {compose} from \"redux\";\nimport Application from \"./application\";\n\n\nconst store = createStore(reducers,compose(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter >\n            <Application/>\n        </BrowserRouter>\n    </Provider>\n    ,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__26rKk\",\"active\":\"MainHeader_active__aTJyT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBarContent\":\"Layout_sideBarContent__1gJiu\",\"auth-wrapper\":\"Layout_auth-wrapper__f07Dm\",\"auth-inner\":\"Layout_auth-inner__3W5pN\",\"form-control\":\"Layout_form-control__1y88P\"};"],"sourceRoot":""}