{"version":3,"sources":["component/layout/MainHeader.module.css","component/layout/Layout.module.css","redux/actions/types.ts","redux/actions/login.ts","App.tsx","redux/actions/users.ts","redux/reducers/login.ts","redux/reducers/index.ts","redux/reducers/users.ts","component/layout/MainHeader.tsx","component/layout/Layout.tsx","component/Login.tsx","pages/Home.tsx","application.tsx","index.tsx"],"names":["module","exports","ActionTypes","loginUser","user","dispatch","a","console","log","axios","post","localDBUrl","resp","localStorage","setItem","JSON","stringify","data","getItem","type","login","payload","logoutUser","logout","_App","state","username","password","onClickFetchUsers","props","fetchAllUsers","handleChangeUserName","e","setState","target","value","handleChangePassword","handleSubmitLogin","preventDefault","onClickGetCurrentUser","userLogin","profpic","this","users","map","src","renderPic","alt","firstname","lastname","email","userRole","user_id","onSubmit","onChange","onClick","renderUsers","React","Component","App","connect","get","fetchaAllUsers","reducers","combineReducers","action","MainHeader","className","classes","header","navData","isActive","active","to","Layout","main","children","Login","useState","setUsername","setPassword","Home","Application","path","element","replace","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9be5a59.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__26rKk\",\"active\":\"MainHeader_active__aTJyT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1Y6ui\"};","import {FetchAllUsersAction} from \"./users\";\r\nimport {LoginUserAction, LogoutUserAction} from \"./login\";\r\n\r\nexport enum ActionTypes{\r\n    fetchaAllUsers,\r\n    login,\r\n    logout\r\n}\r\n\r\nexport type Action = FetchAllUsersAction | LoginUserAction | LogoutUserAction;\r\n","import axios from \"axios\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionTypes} from \"./types\";\r\nimport {User} from \"./users\";\r\n\r\n// const urlApi = `http://52.14.40.145:8080/api/users/all` ;\r\nconst localDBUrl = `http://localhost:8090/api/users/`;\r\n\r\nexport interface LoginUserAction{\r\n    type: ActionTypes.login;\r\n    payload: User;\r\n}\r\nexport interface LogoutUserAction{\r\n    type: ActionTypes.logout\r\n}\r\nexport interface LoginType{\r\n    username:string;\r\n    password:string;\r\n}\r\n\r\nexport const loginUser = (user:LoginType) => {\r\n    return async (dispatch: Dispatch) => {\r\n        console.log(\"In the Action Login !!!\"+user)\r\n        const resp = await axios.post<User>(localDBUrl+\"login\",user)\r\n        localStorage.setItem(\"currentUser\", JSON.stringify(resp.data))\r\n        console.log(localStorage.getItem(\"currentUser\"))\r\n        dispatch<LoginUserAction>({\r\n            type: ActionTypes.login,\r\n            payload: resp.data\r\n        })\r\n    }\r\n}\r\nexport const logoutUser = () => {\r\n    return (dispatch: Dispatch) => dispatch<LogoutUserAction>({\r\n        type: ActionTypes.logout\r\n    })\r\n}","import React from 'react';\nimport './App.css';\nimport {connect} from \"react-redux\";\nimport {fetchAllUsers, User, logoutUser,loginUser } from \"./redux/actions\"\nimport {StoreState} from \"./redux/reducers\";\n\ninterface AppProps {\n    users: User[];\n    userLogin: User;\n    fetchAllUsers: Function;\n    loginUser: Function;\n    logoutUser: Function\n}\n\nclass _App extends React.Component<AppProps>{\n    state = {\n        username: \"\",\n        password: \"\"\n    }\n\n    renderPic(user:User){\n        if (user.profpic == null){\n            return \"https://ptracker-java-react.s3.us-east-2.amazonaws.com/images/profile.png\";\n        }else {\n            return \"https://ptracker-java-react.s3.us-east-2.amazonaws.com/images/\" + user.profpic;\n        }\n    }\n\n    renderUsers(): JSX.Element[] {\n        return this.props.users.map((user: User) => {\n            return (\n                <div key={user.user_id}>\n                    <div><img src={this.renderPic(user)} alt=\"\"/></div>\n                    {user.username}<br/>\n                    {user.firstname}<br/>\n                    {user.lastname}<br/>\n                    {user.email}<br/>\n                    {user.userRole}<br/>\n                </div>\n            );\n        });\n    }\n    onClickFetchUsers = ():void => {\n        this.props.fetchAllUsers();\n    }\n    //Log In Page Info Starts HERE!!!\n    handleChangeUserName = (e: any):void => {\n        this.setState({\n            username: e.target.value\n        })\n    }\n    handleChangePassword = (e: any):void => {\n        this.setState({\n            password: e.target.value\n        })\n    }\n    handleSubmitLogin = (e: any):void => {\n        e.preventDefault();\n        this.props.loginUser(this.state)\n    }\n    onClickGetCurrentUser = (e: any):void =>{\n       // e.target.value = this.props.currentUser.username\n        console.log(this.props.userLogin)\n\n}\n\n    render() {\n        console.log(this.props.users)\n        return (<div>\n           <div>\n               <form onSubmit={this.handleSubmitLogin}>\n                   <label>\n                       UserName:\n                       <input type=\"text\" value={this.state.username} onChange={this.handleChangeUserName} />\n                   </label>\n                   <label>\n                       UserName:\n                       <input type=\"text\" value={this.state.password} onChange={this.handleChangePassword} />\n                   </label>\n                   <input type=\"submit\" value=\"Submit\" />\n               </form>\n           </div>\n            <h1>CURRENT USER IS:</h1>\n            {/*<h1>*/}\n            {/*    {this.props.userLogin.username ? this.props.userLogin.username : \"\"}*/}\n            {/*</h1>*/}\n            <button onClick={this.onClickGetCurrentUser}>Get Current User (Check Console)</button>\n            <br/>\n            <button onClick={this.onClickFetchUsers}>FETCH USERS</button>\n            {this.renderUsers()}\n        </div>)\n    }\n}\n\nconst  mapStateToProps = ({users, userLogin}: StoreState):{users : User[], userLogin : User} => {\nreturn {users, userLogin}\n}\n\nexport const App = connect(\n    mapStateToProps,\n    {fetchAllUsers, logoutUser,loginUser}\n)(_App)","import axios from \"axios\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionTypes} from \"./types\";\r\n\r\nconst urlApi = `http://52.14.40.145:8080/api/users/all` ;\r\nconst localDBUrl = `http://localhost:8090/api/users/all`;\r\n\r\nexport interface User{\r\n    user_id: number;\r\n    email: string;\r\n    firstname: string;\r\n    lastname : string;\r\n    password : string;\r\n    profpic  : string;\r\n    userRole: string;\r\n    username : string;\r\n}\r\nexport interface FetchAllUsersAction{\r\n    type: ActionTypes.fetchaAllUsers;\r\n    payload: User[];\r\n}\r\n\r\nexport const fetchAllUsers = () => {\r\n    return async (dispatch: Dispatch) => {\r\n        const resp = await axios.get<User[]>(urlApi)\r\n        dispatch<FetchAllUsersAction>({\r\n            type: ActionTypes.fetchaAllUsers,\r\n            payload: resp.data\r\n        })\r\n    }\r\n}","import {User, ActionTypes, Action} from \"../actions\";\r\n\r\n// @ts-ignore\r\nlet user :User = localStorage.getItem(\"currentUser\");\r\n\r\nexport const loginReducer = (state:User = user, action: Action) => {\r\n    console.log(\"In the LoginReduce With action \"+ user + action)\r\n    switch (action.type) {\r\n        case ActionTypes.login:\r\n            return action.payload;\r\n        case ActionTypes.logout:\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport {usersReducer} from \"./users\";\r\nimport {User} from \"../actions\";\r\nimport {loginReducer} from \"./login\";\r\n\r\nexport interface StoreState{\r\n    users: User[]\r\n    userLogin: User\r\n}\r\n\r\nexport const reducers = combineReducers<StoreState>({\r\n    users: usersReducer,\r\n    userLogin: loginReducer\r\n});","import {User, ActionTypes, Action} from \"../actions\";\r\n\r\nexport const usersReducer = (state: User[] = [], action: Action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.fetchaAllUsers:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {NavLink} from \"react-router-dom\";\r\nimport classes from './MainHeader.module.css';\r\nimport React from \"react\";\r\n\r\nconst MainHeader: React.FunctionComponent<{}> = props => {\r\n\r\n    return (\r\n        <header className={classes.header}>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink className={(navData) => (navData.isActive ? classes.active : '')} to='/home'>\r\n                            Home\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink className={(navData) => (navData.isActive ? classes.active : '')} to='/login'>\r\n                            Login\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\nexport default MainHeader;","import React, {Fragment} from 'react';\r\n\r\nimport classes from './Layout.module.css';\r\nimport MainNavigation from './MainHeader';\r\n\r\nconst Layout: React.FunctionComponent<{}> = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <MainNavigation/>\r\n            <main className={classes.main}>{props.children}</main>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React, {useState} from 'react';\r\nimport {loginUser, logoutUser, User} from \"../redux/actions\";\r\nimport {LoginType} from \"../redux/actions\";\r\nimport {StoreState} from \"../redux/reducers\";\r\nimport {connect, Selector} from \"react-redux\";\r\n\r\ninterface LoginProps{\r\n    userLogin: User;\r\n    loginUser: Function;\r\n    logoutUser: Function\r\n}\r\n\r\nconst _Login: React.FunctionComponent<LoginProps> = (props)=> {\r\n    const [username,setUsername] = useState<string>(\"\")\r\n    const [password,setPassword] = useState<string>(\"\")\r\n\r\n\r\n    const handleChangeUserName = (e: any):void => {\r\n        setUsername(e.target.value)\r\n    }\r\n   const handleChangePassword = (e: any):void => {\r\n       setPassword(e.target.value)\r\n    }\r\n    let handleSubmitLogin = (e: any): void => {\r\n        e.preventDefault()\r\n        let user: LoginType = {\r\n            username,\r\n            password\r\n        }\r\n        props.loginUser(user)\r\n        console.log(props.loginUser(user))\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmitLogin}>\r\n                <label>\r\n                    UserName:\r\n                    <input type=\"text\" value={username} onChange={handleChangeUserName} />\r\n                </label>\r\n                <label>\r\n                    UserName:\r\n                    <input type=\"text\" value={password} onChange={handleChangePassword} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst  mapStateToProps = ({userLogin}: StoreState):{userLogin : User} => {\r\n    return {userLogin}\r\n}\r\n\r\nexport const Login = connect(\r\n    mapStateToProps,\r\n    {logoutUser,loginUser}\r\n)(_Login)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Home: React.FunctionComponent<{}> = props => {\r\n    return (\r\n        <div>HOME</div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {Route, Routes, Navigate, Link} from 'react-router-dom';\r\nimport Layout from \"./component/layout/Layout\";\r\nimport {Login} from \"./component/Login\";\r\nimport Home from \"./pages/Home\";\r\n\r\n\r\nconst Application: React.FunctionComponent<{}> = props => {\r\n\r\n    return(\r\n        <Layout>\r\n            <Routes>\r\n                <Route path='/' element={<Navigate replace to='/home' />} />\r\n                <Route path='/login' element={<Login />} />\r\n                <Route path='/home' element={<Home />} />\r\n                {/*<Route path='*' element={<NotFound />} />*/}\r\n            </Routes>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Application;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, Link, BrowserRouter} from 'react-router-dom';\nimport {Provider} from \"react-redux\"\nimport './index.css';\nimport {App} from './App';\nimport {createStore , applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {reducers} from \"./redux/reducers\";\nimport {compose} from \"redux\";\nimport Application from \"./application\";\n\n\nconst store = createStore(reducers,compose(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter >\n            <Application/>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}